---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import BlogPostMeta from "../../components/BlogPostMeta.astro";
import { SITE_URL } from "../../meta";
import BaseLayout from "../../components/BaseLayout.astro";
import { getEntries } from "astro:content";
import Article from "../../components/Article.astro";
import Image from "../../components/Image.astro";
import Tag from "../../components/Tag.astro";
import { sequence } from "astro:middleware";

interface Props {
  entry: CollectionEntry<"blogs">;
}

export async function getStaticPaths() {
  const blogEntries = await getCollection("blogs");

  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const {
  entry: {
    render,
    slug,
    data: { title, description, date, coverImage, tags, series },
  },
} = Astro.props;
const { Content, headings } = await render();

const seriesEntries = series
  ? (await getEntries(series)).filter((x) => !x.data.draft)
  : [];

const ogImageAbsoluteUrl = new URL(coverImage.url, SITE_URL).toString();

const marginByDepth: Record<number, string> = {
  1: "ml-0",
  2: "ml-0",
  3: "ml-4",
  4: "ml-8",
};
---

<BaseLayout>
  <BlogPostMeta
    title={title}
    description={description}
    publishDate={date}
    pagePath={`/blog/${slug}`}
    ogImageAbsoluteUrl={ogImageAbsoluteUrl}
    slot="meta"
  />
  <div slot="main" class="max-w-[65ch] py-10 mx-auto">
    <div class="relative">
      <div class="px-5 mx-auto">
        <Article>
          <div>
            <h1 class="mb-1">{title}</h1>
            <p class="not-prose my-0 text-sm">
              <time datetime={date}>{new Date(date).toLocaleDateString()}</time>
            </p>
          </div>
          <div class="text-center">
            <Image className="w-[80%] mx-auto" image={coverImage} />
          </div>
          <Content />
        </Article>
        <div>
          <h2 class="text-xl font-semibold mt-10 mb-5">태그</h2>
          <ul class="flex gap-4">
            {
              tags.map((x) => (
                <li>
                  <Tag size="md" value={x} />
                </li>
              ))
            }
          </ul>
          {
            seriesEntries.length > 0 && (
              <>
                <h2 class="text-xl font-semibold mt-10 mb-5">시리즈</h2>
                <ul class="grid-cols-2 gap-4">
                  {seriesEntries.map((x) => (
                    <li class="col-span-1">
                      <Image image={x.data.coverImage} />
                      <p>{x.data.title}</p>
                    </li>
                  ))}
                </ul>
              </>
            )
          }
        </div>
      </div>
      <aside class="fixed top-[112px] right-40 hidden md:block">
        <nav class="pt-3 w-60 px-5">
          <ul class="text-gray-600">
            {
              headings.map(({ depth, slug, text }) => (
                <li
                  class:list={[marginByDepth[depth], "py-[6px] pl-4 text-sm"]}
                >
                  <a class="unset" href={`#${slug}`}>
                    {text}
                  </a>
                </li>
              ))
            }
          </ul>
        </nav>
      </aside>
    </div>
  </div>
</BaseLayout>
